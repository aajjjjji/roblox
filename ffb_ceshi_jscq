local WindUI = loadstring(game:HttpGet("https://pastebin.com/raw/qYYUTE4g"))()

WindUI:Localization({
    Enabled = true,
    Prefix = "loc:",
    DefaultLanguage = "ru",
    Translations = {
        ["ru"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Пример",
            ["WELCOME"] = "Добро пожаловать в WindUI!",
            ["LIB_DESC"] = "Библиотека для создания красивых интерфейсов",
            ["SETTINGS"] = "Настройки",
            ["APPEARANCE"] = "Внешний вид",
            ["FEATURES"] = "Функционал",
            ["UTILITIES"] = "Инструменты",
            ["UI_ELEMENTS"] = "UI Элементы",
            ["CONFIGURATION"] = "Конфигурация",
            ["SAVE_CONFIG"] = "Сохранить конфигурацию",
            ["LOAD_CONFIG"] = "Загрузить конфигурацию",
            ["THEME_SELECT"] = "Выберите тему",
            ["TRANSPARENCY"] = "Прозрачность окна"
        },
        ["en"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Example",
            ["WELCOME"] = "Welcome to WindUI!",
            ["LIB_DESC"] = "Beautiful UI library for Roblox",
            ["SETTINGS"] = "Settings",
            ["APPEARANCE"] = "Appearance",
            ["FEATURES"] = "Features",
            ["UTILITIES"] = "Utilities",
            ["UI_ELEMENTS"] = "UI Elements",
            ["CONFIGURATION"] = "Configuration",
            ["SAVE_CONFIG"] = "Save Configuration",
            ["LOAD_CONFIG"] = "Load Configuration",
            ["THEME_SELECT"] = "Select Theme",
            ["TRANSPARENCY"] = "Window Transparency"
        }
    }
})

WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")

local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / (#text - 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end

local Confirmed = false

WindUI:Popup({
    Title = gradient("RbScript Hub", Color3.fromHex("#6A11CB"), Color3.fromHex("#2575FC")),
    Icon = "sparkles",
    IconThemed = true,
    Content = "欢迎使用付费版！\n极速传奇",
    Buttons = {
        {
            Title = "取消",
            --Icon = "",
            Callback = function() end,
            Variant = "Secondary", -- Primary, Secondary, Tertiary
        },
        {
            Title = "确认",
            Icon = "arrow-right",
            Callback = function() Confirmed = true end,
            Variant = "Primary", -- Primary, Secondary, Tertiary
        }
    }
})

repeat wait() until Confirmed

local UserGui = Instance.new("ScreenGui", game.CoreGui)
local UserLabel = Instance.new("TextLabel", UserGui)
local UIGradient = Instance.new("UIGradient")

UserGui.Name = "UserGui"
UserGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
UserGui.Enabled = true
UserLabel.Name = "UserLabel"
UserLabel.BackgroundColor3 = Color3.new(1, 1, 1)
UserLabel.BackgroundTransparency = 1
UserLabel.BorderColor3 = Color3.new(0, 0, 0)
UserLabel.Position = UDim2.new(0.80, 0.80, 0.00090, 0)
UserLabel.Size = UDim2.new(0, 135, 0, 50)
UserLabel.Font = Enum.Font.GothamSemibold
UserLabel.Text = "尊敬的："..game.Players.LocalPlayer.Character.Name.."付费版用户，欢迎使用Rb脚本中心！"
UserLabel.TextColor3 = Color3.new(1, 1, 1)
UserLabel.TextScaled = true
UserLabel.TextSize = 14
UserLabel.TextWrapped = true
UserLabel.Visible = true

UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(0.10, Color3.fromRGB(255, 127, 0)),
    ColorSequenceKeypoint.new(0.20, Color3.fromRGB(255, 255, 0)),
    ColorSequenceKeypoint.new(0.30, Color3.fromRGB(0, 255, 0)),
    ColorSequenceKeypoint.new(0.40, Color3.fromRGB(0, 255, 255)),
    ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0, 0, 255)),
    ColorSequenceKeypoint.new(0.60, Color3.fromRGB(139, 0, 255)),
    ColorSequenceKeypoint.new(0.70, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(0.80, Color3.fromRGB(255, 127, 0)),
    ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 255, 0)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 0))
}
UIGradient.Rotation = 10
UIGradient.Parent = UserLabel

local TweenService = game:GetService("TweenService")
local tweeninfo = TweenInfo.new(7, Enum.EasingStyle.Linear, Enum.EasingDirection.In, -1)
local tween = TweenService:Create(UIGradient, tweeninfo, {Rotation = 360})
tween:Play()

local Window = WindUI:CreateWindow({
    Title = "Rb脚本中心",
    Icon = "rbxassetid://105933835532108",
    Author = "付费版 Yungengxin",
    Folder = "脚本中心",
    Size = UDim2.fromOffset(480, 360),
    Theme = "Dark",
    Background = WindUI:Gradient({
        ["0"] = { Color = Color3.fromHex("#0f0c29"), Transparency = 1 },
        ["100"] = { Color = Color3.fromHex("#302b63"), Transparency = 0.9 },
    }, {
        Rotation = 45,
    }),
    Background = "rbxassetid://133155269071576",
    User = {
        Enabled = true,
        Anonymous = false,
        Callback = function()
        
            WindUI:Notify({
                Title = "您的用户ID：",
                Content = (game:GetService("Players").LocalPlayer.UserId),
                Duration = 3
            })
        end
    },
    SideBarWidth = 220,
    HideSearchBar = false,
    ScrollBarEnabled = true
})

Window:Tag({
    Title = "v1.0.0",
    Color = Color3.fromHex("#30ff6a")
})

Window:CreateTopbarButton("theme-switcher", "moon", function()
    WindUI:SetTheme(WindUI:GetCurrentTheme() == "Dark" and "Light" or "Dark")
    WindUI:Notify({
        Title = "Theme Changed",
        Content = "Current theme: "..WindUI:GetCurrentTheme(),
        Duration = 2
    })
end, 990)

local Tabs = {
    Main = Window:Section({ Title = "通用", Opened = true }),
    gn = Window:Section({ Title = "功能", Opened = true }),
    Settings = Window:Section({ Title = "UI设置", Opened = true }),
    Utilities = Window:Section({ Title = "保存配置", Opened = true })
}

local TabHandles = {
    xx = Tabs.Main:Tab({ Title = "游戏信息", Icon = "layout-grid" }),
    Elements = Tabs.Main:Tab({ Title = "玩家功能", Icon = "layout-grid" }),
    gn = Tabs.gn:Tab({ Title = "游戏功能", Icon = "layout-grid" }),
    csgn = Tabs.gn:Tab({ Title = "传送功能", Icon = "layout-grid" }),
    fzgn = Tabs.gn:Tab({ Title = "辅助功能", Icon = "layout-grid" }),
    Appearance = Tabs.Settings:Tab({ Title = "UI外观", Icon = "brush" }),
    Config = Tabs.Utilities:Tab({ Title = "调整配置", Icon = "settings" })
}

TabHandles.xx:Paragraph({
    Title = "您的游戏名称：",
    Desc = ""..game:GetService("Players").LocalPlayer.DisplayName.."",
    Buttons = {
        {
            Title = "复制您的名称",
            Icon = "copy",
            Variant = "Primary",
            Callback = function() 
            
            setclipboard(game:GetService("Players").LocalPlayer.DisplayName)

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Icon = "copy",
            Content = "已成功复制！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})

TabHandles.xx:Paragraph({
    Title = "您的游戏用户名：",
    Desc = ""..game:GetService("Players").LocalPlayer.Name.."",
    Buttons = {
        {
            Title = "复制您的用户名",
            Icon = "copy",
            Variant = "Primary",
            Callback = function() 
            
            setclipboard(game:GetService("Players").LocalPlayer.Name)

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Content = "已成功复制！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})

TabHandles.xx:Paragraph({
    Title = "您的用户名ID：",
    Desc = ""..game:GetService("Players").LocalPlayer.UserId.."",
    Buttons = {
        {
            Title = "复制您的用户名ID",
            Icon = "copy",
            Variant = "Primary",
            Callback = function() 
            
            setclipboard(game:GetService("Players").LocalPlayer.UserId)

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Content = "已成功复制！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})

TabHandles.xx:Paragraph({
    Title = "您的账号注册时间（天）：",
    Desc = ""..game:GetService("Players").LocalPlayer.AccountAge.."",
    Buttons = {
        {
            Title = "复制您的注册时间",
            Icon = "copy",
            Variant = "Primary",
            Callback = function() 
            
            setclipboard(game:GetService("Players").LocalPlayer.AccountAge)

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Content = "已成功复制！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})

TabHandles.xx:Paragraph({
    Title = "您所在的服务器名称：",
    Desc = ""..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name.."",
    Buttons = {
        {
            Title = "复制您所在的服务器名称",
            Icon = "copy",
            Variant = "Primary",
            Callback = function() 
            
            setclipboard(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Content = "已成功复制！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})

TabHandles.xx:Paragraph({
    Title = "您所在的服务器ID：",
    Desc = ""..game.PlaceId.."",
    Buttons = {
        {
            Title = "复制您所在的服务器ID",
            Icon = "copy",
            Variant = "Primary",
            Callback = function() 
            
            setclipboard("无法复制")

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Content = "已成功复制！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})



TabHandles.xx:Paragraph({
    Title = "您的注入器：",
    Desc = ""..identifyexecutor().."",
    Image = "rbxassetid://129287693322764",
    ImageSize = 42, -- default 30
    Thumbnail = "rbxassetid://94512740386917",
    ThumbnailSize = 120, -- Thumbnail height
    Buttons = {
        {
            Title = "测试您注入器的UNC",
            Variant = "Primary",
            Callback = function() 
            Window:Dialog({
            Title = "Rb脚本中心",
            Content = "温馨提示：请勿点击多次，\n否则会造成游戏卡顿!",
            Icon = "bell",
            Buttons = {
                {
                    Title = "确定",
                    Variant = "Primary",
                    Callback = function() 
                        print("ok")
                    end,
                }
            }
        })
            loadstring(game:HttpGet"https://raw.githubusercontent.com/Yungengxin/roblox/refs/heads/main/unc")()

local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
		WindUI:Notify({
            Title = "Rb脚本中心---提示：",
            Content = "已成功执行，请在控制台查看UNC！",
            Icon = "bell",
            IconThemed = true, -- automatic color icon to theme 
            Duration = 5,
        })

            end,
            Icon = "bird",
        },
    }
})

TabHandles.xx:Code({
    Title = "Rb脚本中心交流群（主群）",
    Code = [[https://qm.qq.com/q/csDfI4BZNm]],
})

TabHandles.xx:Code({
    Title = "Rb脚本中心交流群（Discord群）",
    Code = [[https://discord.gg/qZmW3PYd9T]],
})

local intensitySlider = TabHandles.Elements:Slider({
    Title = "玩家速度",
    Desc = "speedwalk",
    Value = { Min = 0, Max = 1000, Default = 16 },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
})

local intensitySlider = TabHandles.Elements:Slider({
    Title = "玩家速度V2",
    Desc = "tpwalk",
    Value = { Min = 0, Max = 10, Default = 0 },
    Callback = function(value)
        local tpWalk = {}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local teleportDistance = value -- 每次传送的距离
local isTeleporting = true -- 是否正在传送

-- 禁用所有与移动相关的状态
local function DisableDefaultMovement()
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, false)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming, false)
end

-- 启用所有与移动相关的状态
local function EnableDefaultMovement()
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, true)
    humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming, true)
end

-- 自定义传送函数
local function Teleport()
    if not isTeleporting or not rootPart or not humanoid then
        return
    end

    -- 获取移动方向
    local moveDirection = humanoid.MoveDirection
    if moveDirection.Magnitude == 0 then
        return -- 如果没有移动方向，则停止传送
    end

    -- 计算传送向量
    local teleportVector = moveDirection * teleportDistance

    -- 检测前方是否有障碍物
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

    local raycastResult = workspace:Raycast(rootPart.Position, teleportVector, raycastParams)

    if raycastResult then
        -- 如果有障碍物，调整传送向量
        teleportVector = (raycastResult.Position - rootPart.Position).Unit * teleportDistance
    end

    -- 更新位置
    rootPart.CFrame = rootPart.CFrame + teleportVector
end

-- 控制开关函数
function tpWalk:Enabled(enabled)
    isTeleporting = enabled
    if enabled then DisableDefaultMovement() else EnableDefaultMovement() end
end

function tpWalk:GetEnabled()
    return isTeleporting
end

function tpWalk:SetSpeed(speed)
    teleportDistance = speed or 0.1
end

function tpWalk:GetSpeed()
    return teleportDistance
end

-- 每帧更新传送
RunService.Heartbeat:Connect(function()
    if isTeleporting then
        Teleport()
    end
end)

return tpWalk
    end
})

local intensitySlider = TabHandles.Elements:Slider({
    Title = "玩家跳跃",
    Desc = "JumpPower",
    Value = { Min = 0, Max = 1000, Default = 50 },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
    end
})

local intensitySlider = TabHandles.Elements:Slider({
    Title = "玩家重力",
    Desc = "gravity",
    Value = { Min = 0, Max = 1000, Default = 309 },
    Callback = function(value)
        game.Workspace.Gravity = value
    end
})



TabHandles.Elements:Divider()

local featureToggle = TabHandles.Elements:Toggle({
    Title = "夜视",
    Desc = "使你的游戏亮度提高",
    Value = false,
    Callback = function(state) 
        if state then
		    game.Lighting.Ambient = Color3.new(1, 1, 1)
            else
		    game.Lighting.Ambient = Color3.new(0, 0, 0)
            end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "夜视已开启，若仍不清楚可开启去雾功能" or "夜视已关闭",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

xrayEnabled = false
function xray()
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and not v.Parent:FindFirstChildWhichIsA("Humanoid") and not v.Parent.Parent:FindFirstChildWhichIsA("Humanoid") then
            v.LocalTransparencyModifier = xrayEnabled and 0.5 or 0
        end
    end
end

local featureToggle = TabHandles.Elements:Toggle({
    Title = "地图透视",
    Desc = "Xray",
    Value = false,
    Callback = function(state) 
        if state then
		    xrayEnabled = true
    xray()
            else
		    xrayEnabled = false
    xray()
            end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "地图透视已开启，若仍不清楚可开启其他视觉功能" or "地图透视已关闭",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local toggleState = false

game:GetService("Players").LocalPlayer.Idled:connect(function()
	game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	wait(1)
	game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
function NoFog()
    local c = game.Lighting
    c.FogEnd = 100000
    for r, v in pairs(c:GetDescendants()) do
        if v:IsA("Atmosphere") then
            v:Destroy()
        end
    end
end
TabHandles.Elements:Button({
    Title = "去雾",
    Desc = "一键去除游戏中的雾",
    Icon = "bell",
    Callback = function()
NoFog()
local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "已去雾",
            Icon = "bell",
            Duration = 3
        })
    end
})
TabHandles.Elements:Divider()

TabHandles.Elements:Button({
    Title = "飞行",
    Desc = "传统的飞行",
    Icon = "bell",
    Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/CPSm1udG"))()
local Sound = Instance.new("Sound",game:GetService("SoundService"))
            Sound.SoundId = "rbxassetid://2865227271"
            Sound:Play()
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "成功加载飞行",
            Icon = "bell",
            Duration = 3
        })
    end
})
local cssdkq = false
local cssd = TabHandles.gn:Toggle({
    Title = "自动刷速度",
    Desc = "城市内使用",
    Value = cssdkq,
    Callback = function(state) 
        cssdkq = state
        if state then
            while cssdkq do
                game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","City")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷速度" or "已关闭自动刷速度",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})
local bxsdkq = false
local bxsd = TabHandles.gn:Toggle({
    Title = "自动刷速度",
    Desc = "白雪城市内使用",
    Value = bxsdkq,
    Callback = function(state) 
        bxsdkq = state
        if state then
            while bxsdkq do
                game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Snow City")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷速度" or "已关闭自动刷速度",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local dysdkq = false
local dysd = TabHandles.gn:Toggle({
    Title = "自动刷速度",
    Desc = "岩浆城市内使用",
    Value = dysdkq,
    Callback = function(state) 
        dysdkq = state
        if state then
            while dysdkq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Magma City")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷速度" or "已关闭自动刷速度",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local cqsdkq = false
local cqsd = TabHandles.gn:Toggle({
    Title = "自动刷速度",
    Desc = "传奇公路内使用",
    Value = cqsdkq,
    Callback = function(state) 
        cqsdkq = state
        if state then
            while cqsdkq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Red Orb","Legends Highway")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷速度" or "已关闭自动刷速度",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})
TabHandles.gn:Divider()
local cskq = false
local cs = TabHandles.gn:Toggle({
    Title = "自动重生",
    Desc = "可重生时将自动重生",
    Value = cskq,
    Callback = function(state) 
        cskq = state
        if state then
            while cskq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("rebirthEvent"):FireServer("rebirthRequest")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动重生" or "已关闭自动重生",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})
TabHandles.gn:Divider()
local cszskq = false
local cszs = TabHandles.gn:Toggle({
    Title = "自动刷钻石",
    Desc = "城市内使用",
    Value = cszskq,
    Callback = function(state) 
        cszskq = state
        if state then
            while cszskq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","City")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷钻石" or "已关闭自动刷钻石",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local bxzskq = false
local bxzs = TabHandles.gn:Toggle({
    Title = "自动刷钻石",
    Desc = "白雪城市内使用",
    Value = bxzskq,
    Callback = function(state) 
        bxzskq = state
        if state then
            while bxzskq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Snow City")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷钻石" or "已关闭自动刷钻石",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local yjzskq = false
local yjzs = TabHandles.gn:Toggle({
    Title = "自动刷钻石",
    Desc = "岩浆城市内使用",
    Value = yjzskq,
    Callback = function(state) 
        yjzskq = state
        if state then
            while yjzskq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Magma City")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷钻石" or "已关闭自动刷钻石",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local cqzskq = false
local cqzs = TabHandles.gn:Toggle({
    Title = "自动刷钻石",
    Desc = "传奇公路内使用",
    Value = cqzskq,
    Callback = function(state) 
        cqzskq = state
        if state then
            while cqzskq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer("collectOrb","Gem","Legends Highway")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷钻石" or "已关闭自动刷钻石",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})
local q = {
    CFrame.new(-278.8976135253906, 66.09315490722656, -10946.564453125),
    CFrame.new(3980.05029296875, 159.91925048828125, 5589.21533203125),
    CFrame.new(137.6853485107422, 75.40111541748047, -5972.4873046875),
    CFrame.new(-15376.439453125, 412.2984619140625, 4475.322265625),
    CFrame.new(-489.440673828125, 98.277099609375, 2502.03564453125),
    CFrame.new(-15167.5068359375, 382.1965026855469, 4888.2900390625),
    CFrame.new(2094.217041015625, 251.98931884765625, 12877.951171875),
    CFrame.new(-1645.1728515625, 69.02545928955078, 5337.923828125),
    CFrame.new(-13254.447265625, 222.44158935546875, 4891.56005859375),
    CFrame.new(-533.439208984375, 58.4377326965332, 209.794921875),
    CFrame.new(473.2319641113281, 66.08084106445312, -10867.8388671875),
    CFrame.new(2333.369873046875, 161.6602325439453, 13369.1240234375),
    CFrame.new(5392.5322265625, 297.8348388671875, 5885.2138671875),
    CFrame.new(3806.247802734375, 299.41748046875, 7225.6806640625),
    CFrame.new(1664.3343505859375, 80.900390625, 12589.7109375),
    CFrame.new(1769.7236328125, 80.90105438232422, 12879.7958984375),
    CFrame.new(-11097.05859375, 200.84193420410156, 4465.34375),
    CFrame.new(-13140.974609375, 200.84193420410156, 4465.39599609375),
    CFrame.new(-536.3781127929688, 58.43798065185547, -133.1399688720703),
    CFrame.new(2485.461181640625, 135.55299377441406, 12384.6455078125),
    CFrame.new(1173.287109375, 92.03070831298828, -6024.24365234375),
    CFrame.new(-85.52466583251953, 115.9759750366211, -107.73560333251953),
    CFrame.new(1805.7076416015625, 90.94168853759766, 4617.30712890625),
    CFrame.new(-350.6163330078125, 66.06715393066406, -8732.2490234375),
    CFrame.new(5666.32861328125, 326.5240478515625, 6494.826171875),
    CFrame.new(4516.66845703125, 221.20545959472656, 7181.7421875),
    CFrame.new(-1746.5504150390625, 150.5835418701172, 5372.54248046875),
    CFrame.new(5361.96826171875, 297.8207092285156, 7025.44482421875),
    CFrame.new(4650.1669921875, 221.213134765625, 5608.54345703125),
    CFrame.new(-12993.1826171875, 200.82785034179688, 5222.71337890625),
    CFrame.new(355.5094299316406, 111.75679779052734, -10924.6923828125),
    CFrame.new(1942.0057373046875, 93.18344116210938, -2047.2164306640625),
    CFrame.new(-15156.52734375, 355.08978271484375, 4141.91357421875),
    CFrame.new(2062.114990234375, 159.88404846191406, 4374.28076171875),
    CFrame.new(230.04505920410156, 94.17676544189453, 80.71623229980469),
}

local sqkq = false
local sq = TabHandles.gn:Toggle({
    Title = "自动刷圈",
    Desc = "传奇公路内使用",
    Value = sqkq,
    Callback = function(state) 
        sqkq = state
        if state then
            while sqkq do
                for _, zdsq in ipairs(q) do
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = zdsq
                    wait(0.0000000000000000000000000000000000000000000000000000000000000000000000001)
                end
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        else
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-568.6292114257812, 3.1723721027374268, 412.86492919921875)
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷圈" or "已关闭自动刷圈",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至城市（出生点）",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-568.6292114257812, 3.1723721027374268, 412.86492919921875)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至神秘洞穴",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-9683.048828125, 58.352359771728516, 3136.626953125)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至白雪城市",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-866.3868408203125, 3.222372055053711, 2165.70654296875)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至地狱洞穴",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-11041.357421875, 58.352359771728516, 4111.8251953125)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至熔岩城市",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1616.8270263671875, 3.2723801136016846, 4330.65234375)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至水手路线",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1618.4071044921875, 8.759234428405762, 4892.44091796875)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至电光洞穴",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-13107.9892578125, 58.352359771728516, 4099.099609375)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至传奇公路",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(3673.601318359375, 70.75231170654297, 5588.7958984375)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

TabHandles.csgn:Button({
    Title = "传送至丛林洞穴",
    Icon = "bell",
    Callback = function()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15266.7880859375, 239.7072296142578, 3769.77490234375)
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = "传送成功",
            Icon = "bell",
            Duration = 3
        })
    end
})

local zdbskq = false
local zdbs = TabHandles.fzgn:Toggle({
    Title = "自动比赛",
    Desc = "当有比赛时自动参加比赛",
    Value = zdbskq,
    Callback = function(state) 
        zdbskq = state
        if state then
            while zdbskq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("raceEvent"):FireServer("joinRace")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动比赛" or "已关闭自动比赛",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local zdsdkq = false
local zdsd = TabHandles.fzgn:Toggle({
    Title = "自动刷速度V2",
    Desc = "可在任意地方使用（不稳定）",
    Value = zdsdkq,
    Callback = function(state) 
        zdsdkq = state
        if state then
            while zdsdkq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("questsEvent"):FireServer("collectQuest",Instance.new("Folder", nil))
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动刷速度" or "已关闭自动刷速度",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local mcwkq = false
local mcw = TabHandles.fzgn:Toggle({
    Title = "自动买宠物",
    Desc = "快速获得宠物，消耗钻石",
    Value = mcwkq,
    Callback = function(state) 
        mcwkq = state
        if state then
            while mcwkq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("openCrystalRemote"):InvokeServer("openCrystal","Jungle Crystal")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动买宠物" or "已关闭自动买宠物",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

local mwjkq = false
local mwj = TabHandles.fzgn:Toggle({
    Title = "自动买尾迹",
    Desc = "快速获得尾迹，消耗钻石",
    Value = mwjkq,
    Callback = function(state) 
        mwjkq = state
        if state then
            while mwjkq do
game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("openCrystalRemote"):InvokeServer("openCrystal","Inferno Crystal")
            wait(0.000000000000000000000000000000000000000000000000000000000000000000000000001)
            end
        end
        WindUI:Notify({
            Title = "Rb脚本中心：",
            Content = state and "已开启自动买尾迹" or "已关闭自动买尾迹",
            Icon = state and "check" or "x",
            Duration = 2
        })
    end
})

TabHandles.Appearance:Paragraph({
    Title = "自定义界面",
    Desc = "个性化您的体验",
    Image = "palette",
    ImageSize = 20,
    Color = "White"
})

local themes = {}
for themeName, _ in pairs(WindUI:GetThemes()) do
    table.insert(themes, themeName)
end
table.sort(themes)

local themeDropdown = TabHandles.Appearance:Dropdown({
    Title = "主题选择",
    Values = themes,
    Value = "Dark",
    Callback = function(theme)
        WindUI:SetTheme(theme)
        WindUI:Notify({
            Title = "主题应用",
            Content = theme,
            Icon = "palette",
            Duration = 2
        })
    end
})

local transparencySlider = TabHandles.Appearance:Slider({
    Title = "透明度",
    Value = { 
        Min = 0,
        Max = 1,
        Default = 0.2,
    },
    Step = 0.1,
    Callback = function(value)
        Window:ToggleTransparency(tonumber(value) > 0)
        WindUI.TransparencyValue = tonumber(value)
    end
})

TabHandles.Appearance:Toggle({
    Title = "启用黑色主题",
    Desc = "使用黑色调主题方案",
    Value = true,
    Callback = function(state)
        WindUI:SetTheme(state and "Dark" or "Light")
        themeDropdown:Select(state and "Dark" or "Light")
    end
})

TabHandles.Appearance:Button({
    Title = "创建新主题",
    Icon = "plus",
    Callback = function()
        Window:Dialog({
            Title = "创建主题",
            Content = "此功能很快就会推出",
            Buttons = {
                {
                    Title = "确认",
                    Variant = "Primary"
                }
            }
        })
    end
})

TabHandles.Config:Paragraph({
    Title = "配置管理",
    Desc = "保存你的设置",
    Image = "save",
    ImageSize = 20,
    Color = "White"
})

local configName = "default"
local configFile = nil
local MyPlayerData = {
    name = "Player1",
    level = 1,
    inventory = { "sword", "shield", "potion" }
}

TabHandles.Config:Input({
    Title = "配置名称",
    Value = configName,
    Callback = function(value)
        configName = value
    end
})

local ConfigManager = Window.ConfigManager
if ConfigManager then
    ConfigManager:Init(Window)
    
    TabHandles.Config:Button({
        Title = "保存配置",
        Icon = "save",
        Variant = "Primary",
        Callback = function()
            configFile = ConfigManager:CreateConfig(configName)
            
            configFile:Register("featureToggle", featureToggle)
            configFile:Register("intensitySlider", intensitySlider)
            configFile:Register("modeDropdown", modeDropdown)
            configFile:Register("themeDropdown", themeDropdown)
            configFile:Register("transparencySlider", transparencySlider)
            
            configFile:Set("playerData", MyPlayerData)
            configFile:Set("lastSave", os.date("%Y-%m-%d %H:%M:%S"))
            
            if configFile:Save() then
                WindUI:Notify({ 
                    Title = "保存配置", 
                    Content = "保存为："..configName,
                    Icon = "check",
                    Duration = 3
                })
            else
                WindUI:Notify({ 
                    Title = "错误", 
                    Content = "保存失败",
                    Icon = "x",
                    Duration = 3
                })
            end
        end
    })

    TabHandles.Config:Button({
        Title = "加载配置",
        Icon = "folder",
        Callback = function()
            configFile = ConfigManager:CreateConfig(configName)
            local loadedData = configFile:Load()
            
            if loadedData then
                if loadedData.playerData then
                    MyPlayerData = loadedData.playerData
                end
                
                local lastSave = loadedData.lastSave or "Unknown"
                WindUI:Notify({ 
                    Title = "加载配置", 
                    Content = "正在加载："..configName.."\n上次保存："..lastSave,
                    Icon = "refresh-cw",
                    Duration = 5
                })
                
                TabHandles.Config:Paragraph({
                    Title = "玩家数据",
                    Desc = string.format("名字: %s\n等级: %d\n库存: %s", 
                        MyPlayerData.name, 
                        MyPlayerData.level, 
                        table.concat(MyPlayerData.inventory, ", "))
                })
            else
                WindUI:Notify({ 
                    Title = "错误", 
                    Content = "加载失败",
                    Icon = "x",
                    Duration = 3
                })
            end
        end
    })
else
    TabHandles.Config:Paragraph({
        Title = "配置管理不可用",
        Desc = "此功能需要配置管理",
        Image = "alert-triangle",
        ImageSize = 20,
        Color = "White"
    })
end


local footerSection = Window:Section({ Title = "Rb脚本中心_付费版" })

Window:OnClose(function()
    print("Window closed")
    
    if ConfigManager and configFile then
        configFile:Set("playerData", MyPlayerData)
        configFile:Set("lastSave", os.date("%Y-%m-%d %H:%M:%S"))
        configFile:Save()
        print("Config auto-saved on close")
    end
end)

Window:OnDestroy(function()
    print("Window destroyed")
end)
